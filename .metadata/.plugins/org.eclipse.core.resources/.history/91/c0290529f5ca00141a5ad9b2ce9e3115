package com.example.assis_3.adapter;

//NewsFragment中ListView的适配器
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.zip.Inflater;

import com.example.assis_3.NewsEntity;
import com.example.assis_3.R;
import com.example.assis_3.manager.NewsManager;
import com.example.assis_3.options.ImageOptions;
import com.example.assis_3.util.DateTools;
import com.nostra13.universalimageloader.core.DisplayImageOptions;
import com.nostra13.universalimageloader.core.ImageLoader;

import android.app.Activity;
import android.graphics.drawable.ColorDrawable;
import android.graphics.drawable.Drawable;
import android.text.TextUtils;
import android.view.LayoutInflater;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnTouchListener;
import android.view.ViewGroup.LayoutParams;
import android.view.ViewGroup;
import android.widget.AbsListView;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.PopupWindow;
import android.widget.SectionIndexer;
import android.widget.TextView;

public class NewsAdapter extends BaseAdapter implements SectionIndexer,
		OnClickListener {

	ArrayList<NewsEntity> newsList;
	Activity activity;
	LayoutInflater inflater = null;
	protected ImageLoader imageLoader = ImageLoader.getInstance();
	DisplayImageOptions options;
	/** 弹出的更多选择框 */
	private PopupWindow popupWindow;

	public NewsAdapter(Activity activity, ArrayList<NewsEntity> newsList) {
		this.activity = activity;
		this.newsList = newsList;
		inflater = LayoutInflater.from(activity);
		options = ImageOptions.getListOptions();
		initPopWindow();
	}

	private List<Integer> mPositions;
	private List<String> mSections;

	@Override
	public int getCount() {
		// TODO Auto-generated method stub
		return newsList == null ? 0 : newsList.size();
	}

	@Override
	public NewsEntity getItem(int position) {
		// TODO Auto-generated method stub
		if (newsList != null && newsList.size() != 0) {
			return newsList.get(position);
		}
		return null;
	}

	@Override
	public long getItemId(int position) {
		// TODO Auto-generated method stub
		return position;
	}

	@Override
	public View getView(int position, View convertView, ViewGroup parent) {
		// TODO Auto-generated method stub
		ViewHolder mHolder;
		View view = convertView;
		if (view == null) {
			view = inflater.inflate(R.layout.list_item, null);

			mHolder = new ViewHolder();
			mHolder.item_layout = (LinearLayout) view
					.findViewById(R.id.item_layout);
			mHolder.item_title = (TextView) view.findViewById(R.id.item_title);
			mHolder.item_source = (TextView) view
					.findViewById(R.id.item_source);

			mHolder.comment_count = (TextView) view
					.findViewById(R.id.comment_count);

			mHolder.publish_time = (TextView) view
					.findViewById(R.id.publish_time);
			mHolder.item_abstract = (TextView) view
					.findViewById(R.id.item_abstract);
			mHolder.right_image = (ImageView) view
					.findViewById(R.id.right_image);

			mHolder.item_image_layout = (LinearLayout) view
					.findViewById(R.id.item_image_layout);
			mHolder.item_image_0 = (ImageView) view
					.findViewById(R.id.item_image_0);
			mHolder.item_image_1 = (ImageView) view
					.findViewById(R.id.item_image_1);
			mHolder.item_image_2 = (ImageView) view
					.findViewById(R.id.item_image_2);
			mHolder.popicon = (ImageView) view.findViewById(R.id.popicon);
			mHolder.right_padding_view = (View) view
					.findViewById(R.id.right_padding_view);
			view.setTag(mHolder);
		} else {
			mHolder = (ViewHolder) view.getTag();
		}
		// 获取position对应的数据
		NewsEntity news = getItem(position);

		mHolder.item_title.setText(news.getTitle());
		mHolder.item_source.setText(news.getSource());
		mHolder.comment_count.setText("评论" + news.getCommentNum());
		mHolder.publish_time.setText(news.getPublishTime() + "小时前");

		mHolder.popicon.setVisibility(View.VISIBLE);
		mHolder.comment_count.setVisibility(View.VISIBLE);
		mHolder.right_padding_view.setVisibility(View.VISIBLE);

		if (TextUtils.isEmpty(news.getPicOne())
				|| TextUtils.isEmpty(news.getPicTwo())
				|| TextUtils.isEmpty(news.getPicThr())) {
			mHolder.item_image_layout.setVisibility(View.GONE);
			mHolder.right_image.setVisibility(View.VISIBLE);
			imageLoader.displayImage(news.getPicOne(), mHolder.right_image,
					options);
		} else {
			mHolder.right_image.setVisibility(View.GONE);
			mHolder.item_image_layout.setVisibility(View.VISIBLE);
			imageLoader.displayImage(news.getPicOne(), mHolder.item_image_0,
					options);
			imageLoader.displayImage(news.getPicTwo(), mHolder.item_image_1,
					options);
			imageLoader.displayImage(news.getPicThr(), mHolder.item_image_2,
					options);
		}
		if (!TextUtils.isEmpty(news.getSummary())) {
			mHolder.item_abstract.setVisibility(View.VISIBLE);
			mHolder.item_abstract.setText(news.getSummary());
		} else {
			mHolder.item_abstract.setVisibility(View.GONE);
		}
		// 设置+按钮点击效果
		mHolder.popicon.setOnClickListener(new popAction(position));

		return view;
	}

	static class ViewHolder {
		LinearLayout item_layout;
		// 三张图片所在布局
		LinearLayout picture_layout;
		// title
		TextView item_title;
		// 图片源
		TextView item_source;
		// 评论数量
		TextView comment_count;
		// 发布时间
		TextView publish_time;
		// 新闻摘要
		TextView item_abstract;
		// 右上方TAG标记图片
		ImageView alt_mark;
		// 右边图片
		ImageView right_image;
		// 3张图片布局
		LinearLayout item_image_layout; // 3张图片时候的布局
		ImageView item_image_0;
		ImageView item_image_1;
		ImageView item_image_2;
		// pop按钮
		ImageView popicon;
		// paddingview
		View right_padding_view;

	}

	/** popWindow 关闭按钮 */
	private ImageView btn_pop_close;

	private LinearLayout ll_pop_speech;

	private LinearLayout ll_pop_favor;

	/**
	 * 初始化弹出的pop
	 * */
	private void initPopWindow() {
		View popView = inflater.inflate(R.layout.list_item_pop, null);
		popupWindow = new PopupWindow(popView, LayoutParams.WRAP_CONTENT,
				LayoutParams.WRAP_CONTENT);
		popupWindow.setBackgroundDrawable(new ColorDrawable(0));
		// 设置popwindow出现和消失动画
		popupWindow.setAnimationStyle(R.style.PopMenuAnimation);

		btn_pop_close = (ImageView) popView.findViewById(R.id.btn_pop_close);
		ll_pop_speech = (LinearLayout) popView.findViewById(R.id.ll_pop_speech);
		ll_pop_favor = (LinearLayout) popView.findViewById(R.id.ll_pop_favor);
	}

	/**
	 * 显示popWindow
	 * */
	public void showPop(View parent, int x, int y, int postion) {
		// 展现POP的时候判断，新闻列表是否已经被收藏
		NewsEntity record = newsList.get(postion);
		NewsManager newsManager = NewsManager.getManager(activity);
		List<NewsEntity> results = newsManager.isFavoriteNews(record);
		if (results.size() > 0) {
			TextView favor = (TextView) popupWindow.getContentView()
					.findViewById(R.id.tv_pop_favor);
			favor.setOnClickListener(new popAction(postion));
			Drawable drawable = activity.getResources().getDrawable(
					R.drawable.listpage_more_like_seleted_normal);
			// 这一步必须要做,否则不会显示.
			drawable.setBounds(0, 0, drawable.getMinimumWidth(),
					drawable.getMinimumHeight());
			favor.setCompoundDrawables(drawable, null, null, null);
			favor.setOnClickListener(new popAction(postion));
		}else{
			TextView favor = (TextView) popupWindow.getContentView()
					.findViewById(R.id.tv_pop_favor);
			Drawable drawable = activity.getResources().getDrawable(
					R.drawable.listpage_more_like_normal);
			drawable.setBounds(0, 0, drawable.getMinimumWidth(),
					drawable.getMinimumHeight());
			favor.setCompoundDrawables(drawable, null, null, null);
			favor.setOnClickListener(new popAction(postion));
		}
		// 设置popwindow显示位置
		popupWindow.showAtLocation(parent, 0, x, y);
		// 获取popwindow焦点
		popupWindow.setFocusable(true);
		// 设置popwindow如果点击外面区域，便关闭。
		popupWindow.setOutsideTouchable(true);
		popupWindow.update();
		if (popupWindow.isShowing()) {

		}
		btn_pop_close.setOnClickListener(new OnClickListener() {
			public void onClick(View paramView) {
				popupWindow.dismiss();
			}
		});
	}

	/**
	 * 每个ITEM中more按钮对应的点击动作
	 * */
	public class popAction implements OnClickListener {
		int position;

		public popAction(int position) {
			this.position = position;
		}

		@Override
		public void onClick(View v) {
			int id = v.getId();
			NewsManager instance = NewsManager.getManager(activity);
			switch (id) {
			case R.id.popicon:
				int[] arrayOfInt = new int[2];
				// 获取点击按钮的坐标
				v.getLocationOnScreen(arrayOfInt);
				int x = arrayOfInt[0];
				int y = arrayOfInt[1];
				showPop(v, x, y, position);
				break;
			case R.id.tv_pop_favor:
				NewsEntity record = newsList.get(position);
				List<NewsEntity> results = instance.isFavoriteNews(record);
				if(results.size() == 0){
					instance.insertFavoriteNews(record);
					popupWindow.dismiss();
				}else{
					instance.deleteFavoriteNews(record);
					popupWindow.dismiss();
				}
				break;
			case R.id.ll_pop_speech:

				break;
			}

		}
	}

	/* 是不是第一个ITEM， true：是 false :不是 */
	public boolean isfirst = true;

	@Override
	public Object[] getSections() {
		return mSections.toArray();
	}

	@Override
	public int getPositionForSection(int sectionIndex) {
		if (sectionIndex < 0 || sectionIndex >= mPositions.size()) {
			return -1;
		}
		return mPositions.get(sectionIndex);
	}

	@Override
	public int getSectionForPosition(int position) {
		if (position < 0 || position >= getCount()) {
			return -1;
		}
		int index = Arrays.binarySearch(mPositions.toArray(), position);
		return index >= 0 ? index : -index - 2;
	}

	@Override
	public void onClick(View view) {
		int id = view.getId();
		NewsManager instance = NewsManager.getManager(activity);
		switch (id) {
		case R.id.ll_pop_favor:
       //     List<NewsEntity> results = instance.isFavoriteNews(record)
			break;
		case R.id.ll_pop_speech:

			break;
		}
	}
}
