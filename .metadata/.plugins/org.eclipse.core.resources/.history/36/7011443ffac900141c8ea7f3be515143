package com.example.assis_3.extensions.sample;

import java.util.HashMap;
import java.util.Map;

import com.example.assis_3.R;
import com.example.assis_3.SystemConfig;
import com.example.assis_3.constants.ConfigConstants;
import com.example.assis_3.manager.SystemConfigManager;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.AlertDialog.Builder;
import android.content.DialogInterface;
import android.content.Intent;
import android.graphics.Color;
import android.graphics.drawable.ColorDrawable;
import android.graphics.drawable.Drawable;
import android.os.Bundle;
import android.text.AlteredCharSequence;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.CheckBox;
import android.widget.LinearLayout;
import android.widget.TextView;

public class SettingActivity extends Activity implements OnClickListener {

	private SystemConfigManager systemConfigManager;

	private CheckBox isShowAbstrator;
	private CheckBox isPush;
	private LinearLayout font_layout;
	private TextView font_size;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		initActionBar();
		setContentView(R.layout.settings);
		initView();
		initDate();
	}

	private void initDate() {
		systemConfigManager = SystemConfigManager.getInstance();
		Map<String, String> configMap = systemConfigManager.getConfig();
		String sys_showAbs = configMap.get(ConfigConstants.DISPLAY_ABSTRACT);
		String sys_font_size = configMap.get(ConfigConstants.FONT_SIZE);
		String sys_push = configMap.get(ConfigConstants.IS_PUSH);
		// 设定是否显示列表摘要
		if (sys_showAbs.equals("1")) {
			isShowAbstrator.setChecked(true);
		} else {
			isShowAbstrator.setChecked(false);
		}
		// 设定显示字体大小
		if (sys_font_size.equals("0")) {
			font_size.setText(R.string.font_size_0);
		} else if (sys_font_size.equals("1")) {
			font_size.setText(R.string.font_size_1);
		} else if (sys_font_size.equals("2")) {
			font_size.setText(R.string.font_size_2);
		}
		// 设定是否推送
		if (sys_push.equals("0")) {
			isPush.setChecked(false);
		} else if ("1".equals(sys_push)) {
			isPush.setChecked(true);
		}

	}

	private void initView() {
		isShowAbstrator = (CheckBox) this.findViewById(R.id.checkbox_list_mode);
		isShowAbstrator.setOnClickListener(this);
		isPush = (CheckBox) this.findViewById(R.id.checkbox_notify);
		isPush.setOnClickListener(this);
		font_layout = (LinearLayout) this.findViewById(R.id.setting_font_size);
		font_layout.setOnClickListener(this);
		font_size = (TextView) this.findViewById(R.id.font_size);
	}

	private void initActionBar() {
		getActionBar().setTitle("设置");
		// getActionBar().setLogo(R.drawable.btn_back_normal);
		int color = Color.parseColor("#FFC74B46");
		Drawable colorDrawable = new ColorDrawable(color);
		getActionBar().setBackgroundDrawable(colorDrawable);
		getActionBar().setDisplayShowTitleEnabled(true);
		getActionBar().setDisplayHomeAsUpEnabled(true);
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		switch (item.getItemId()) {
		case android.R.id.home:
			SettingActivity.this.finish();
			startActivity(new Intent(this, MainActivity.class));
			overridePendingTransition(R.anim.slide_in_left,
					R.anim.slide_out_right);
			return true;
		default:
			return true;
		}
	}

	@Override
	public void onBackPressed() {
		super.onBackPressed();
		overridePendingTransition(R.anim.slide_in_left, R.anim.slide_out_right);
	}

	@Override
	public void onClick(View view) {
		Map<String, String> configMap = new HashMap<String, String>();
		switch (view.getId()) {
		case R.id.checkbox_list_mode:
			if (((CheckBox)view).isChecked()) {
				configMap.put(ConfigConstants.DISPLAY_ABSTRACT, "1");
			} else {
				configMap.put(ConfigConstants.DISPLAY_ABSTRACT, "0");
			}
			systemConfigManager.saveConfig(configMap);
			break;
		case R.id.checkbox_notify:
			if (((CheckBox)view).isChecked()) {
				configMap.put(ConfigConstants.IS_PUSH, "1");
			} else {
				configMap.put(ConfigConstants.IS_PUSH, "0");
			}
			systemConfigManager.saveConfig(configMap);
			break;
		case R.id.setting_font_size:
            AlertDialog.Builder  builder = new Builder(SettingActivity.this);
            builder.setTitle(R.string.font_size);
            builder.setIcon(R.drawable.ic_launcher);
            builder.setSingleChoiceItems(new String[]{"选项1","选项2","选项3","选项4"}, 0, new DialogInterface.OnClickListener() {
                            
                        @Override
           public void onClick(DialogInterface dialog, int which) {
                     // TODO Auto-generated method stub
                             dialog.dismiss();
                        }
                          });
             builder.setNegativeButton("Cancel",null);
             builder.show();

		}

	}
}
