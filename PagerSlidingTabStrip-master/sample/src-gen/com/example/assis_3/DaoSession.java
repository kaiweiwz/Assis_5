package com.example.assis_3;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.example.assis_3.FeedbackMsg;
import com.example.assis_3.ChannelItem;
import com.example.assis_3.NewsEntity;
import com.example.assis_3.SystemConfig;
import com.example.assis_3.SystemMsg;

import com.example.assis_3.FeedbackMsgDao;
import com.example.assis_3.ChannelItemDao;
import com.example.assis_3.NewsEntityDao;
import com.example.assis_3.SystemConfigDao;
import com.example.assis_3.SystemMsgDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig feedbackMsgDaoConfig;
    private final DaoConfig channelItemDaoConfig;
    private final DaoConfig newsEntityDaoConfig;
    private final DaoConfig systemConfigDaoConfig;
    private final DaoConfig systemMsgDaoConfig;

    private final FeedbackMsgDao feedbackMsgDao;
    private final ChannelItemDao channelItemDao;
    private final NewsEntityDao newsEntityDao;
    private final SystemConfigDao systemConfigDao;
    private final SystemMsgDao systemMsgDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        feedbackMsgDaoConfig = daoConfigMap.get(FeedbackMsgDao.class).clone();
        feedbackMsgDaoConfig.initIdentityScope(type);

        channelItemDaoConfig = daoConfigMap.get(ChannelItemDao.class).clone();
        channelItemDaoConfig.initIdentityScope(type);

        newsEntityDaoConfig = daoConfigMap.get(NewsEntityDao.class).clone();
        newsEntityDaoConfig.initIdentityScope(type);

        systemConfigDaoConfig = daoConfigMap.get(SystemConfigDao.class).clone();
        systemConfigDaoConfig.initIdentityScope(type);

        systemMsgDaoConfig = daoConfigMap.get(SystemMsgDao.class).clone();
        systemMsgDaoConfig.initIdentityScope(type);

        feedbackMsgDao = new FeedbackMsgDao(feedbackMsgDaoConfig, this);
        channelItemDao = new ChannelItemDao(channelItemDaoConfig, this);
        newsEntityDao = new NewsEntityDao(newsEntityDaoConfig, this);
        systemConfigDao = new SystemConfigDao(systemConfigDaoConfig, this);
        systemMsgDao = new SystemMsgDao(systemMsgDaoConfig, this);

        registerDao(FeedbackMsg.class, feedbackMsgDao);
        registerDao(ChannelItem.class, channelItemDao);
        registerDao(NewsEntity.class, newsEntityDao);
        registerDao(SystemConfig.class, systemConfigDao);
        registerDao(SystemMsg.class, systemMsgDao);
    }
    
    public void clear() {
        feedbackMsgDaoConfig.getIdentityScope().clear();
        channelItemDaoConfig.getIdentityScope().clear();
        newsEntityDaoConfig.getIdentityScope().clear();
        systemConfigDaoConfig.getIdentityScope().clear();
        systemMsgDaoConfig.getIdentityScope().clear();
    }

    public FeedbackMsgDao getFeedbackMsgDao() {
        return feedbackMsgDao;
    }

    public ChannelItemDao getChannelItemDao() {
        return channelItemDao;
    }

    public NewsEntityDao getNewsEntityDao() {
        return newsEntityDao;
    }

    public SystemConfigDao getSystemConfigDao() {
        return systemConfigDao;
    }

    public SystemMsgDao getSystemMsgDao() {
        return systemMsgDao;
    }

}
